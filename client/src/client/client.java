/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package client;


import command.Message;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Muhammad Izzuddin
 */
public class client extends javax.swing.JFrame {
    private Socket server = null;
    private BufferedOutputStream bos = null;
    private BufferedInputStream bis = null;
    private ObjectOutputStream oos = null;
    private ObjectInputStream ois = null;
    private FileInputStream fis = null;
    private FileOutputStream fos = null;
    private File f;
    private ArrayList<String> rcpt = new ArrayList<>();
    private String secret;
    private StringBuffer dashes;
    private final int MAXPARTS = 6;
    private int bodyparts;
    private boolean done;
    private String guess;
    private String guesses;
    private char letter;
    private Scanner infile;
    private threadReadClient trdClient;
    private String currentWord;
    private boolean isConnected;
    private int count;
    public Timer baru;
    public boolean flag = false;
    /**
     * Creates new form client
     */
    public client() {
        initComponents();
        room.removeAllItems();
        setEnObject(false);
        addWindowListener(new java.awt.event.WindowAdapter()   
        {  
            @Override
            public void windowClosing( java.awt.event.WindowEvent e )   
            {  
                dispose();
                if(isConnected == true){
                    System.out.println("GOOD BYE");
                    disconFrom();
                }
                System.exit( 0 );  
            }  
        });
        baru = new Timer();
        baru.schedule(new SayHello(this,waktu), 0,1000);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uname = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        listuser = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        room = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        enterroom = new javax.swing.JButton();
        servname = new javax.swing.JTextField();
        scoring = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        connBtn = new javax.swing.JButton();
        img = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        msgPool = new javax.swing.JTextArea();
        sendBtn = new javax.swing.JButton();
        sendText = new javax.swing.JTextField();
        guessText = new javax.swing.JTextField();
        guessBtn = new javax.swing.JButton();
        waktu = new javax.swing.JLabel();
        words = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        top5 = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        uname.setText("udin");
        uname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unameActionPerformed(evt);
            }
        });

        listuser.setEditable(false);
        listuser.setColumns(1);
        listuser.setRows(1);
        listuser.setTabSize(1);
        listuser.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        listuser.setMinimumSize(new java.awt.Dimension(0, 0));
        jScrollPane3.setViewportView(listuser);

        jLabel1.setText("Username");

        jLabel2.setText("Server");

        jLabel6.setText("TIME LEFT :");

        room.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomActionPerformed(evt);
            }
        });

        jLabel3.setText("Room");

        enterroom.setText("Enter Room");
        enterroom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterroomActionPerformed(evt);
            }
        });

        servname.setText("localhost");

        scoring.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        scoring.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scoring.setText("0");

        jLabel4.setText("SCORE:");

        connBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        connBtn.setText("Connect");
        connBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connBtnActionPerformed(evt);
            }
        });

        img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/client/img/1.png"))); // NOI18N
        img.setText("jLabel1");

        msgPool.setEditable(false);
        msgPool.setColumns(20);
        msgPool.setRows(5);
        jScrollPane1.setViewportView(msgPool);

        sendBtn.setText("Chat");
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });

        sendText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendTextActionPerformed(evt);
            }
        });

        guessText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guessTextActionPerformed(evt);
            }
        });

        guessBtn.setText("GuessIt");
        guessBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guessBtnActionPerformed(evt);
            }
        });

        waktu.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        waktu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        waktu.setText("0");

        words.setFont(new java.awt.Font("Tahoma", 0, 42)); // NOI18N
        words.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        words.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        words.setEnabled(false);

        jLabel5.setText("List User");

        top5.setEditable(false);
        top5.setColumns(5);
        top5.setRows(5);
        jScrollPane2.setViewportView(top5);

        jLabel7.setText("TOP 5 PLAYER");

        jLabel8.setText("Fun Chat Room");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(guessText, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(guessBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(scoring, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                                        .addComponent(waktu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uname)
                            .addComponent(servname))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(connBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(words, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(sendText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 52, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(room, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(enterroom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(room, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(connBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(servname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(words, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterroom, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(img)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(guessText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guessBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(waktu)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(scoring, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sendBtn)
                            .addComponent(sendText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void roomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomActionPerformed

    private void enterroomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterroomActionPerformed
        // TODO add your handling code here:
        command.CommandList baru = new command.CommandList();
        baru.setCommand("RNAME");
        ArrayList<String> detail = new ArrayList<>();
        detail.add((String) room.getSelectedItem());
        baru.setCommandDetails(detail);
        send(baru);
        flag = true;
        msgPool.setText("");
    }//GEN-LAST:event_enterroomActionPerformed

    private void connBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connBtnActionPerformed
        if(isConnected){
            disconFrom();
            room.removeAllItems();
            flag = false;
        }
        else{
            connTo();
            //setEnObject(true);
        }
    }//GEN-LAST:event_connBtnActionPerformed

    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
        Message pesan = new Message();
        pesan.setIsi(sendText.getText());
        pesan.setDari(uname.getText());
        send(pesan);
        this.sendText.setText("");
    }//GEN-LAST:event_sendBtnActionPerformed

    private void sendTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendTextActionPerformed
        sendBtnActionPerformed(evt);
    }//GEN-LAST:event_sendTextActionPerformed

    private void guessTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guessTextActionPerformed
        guessBtnActionPerformed(evt);
    }//GEN-LAST:event_guessTextActionPerformed

    private void guessBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guessBtnActionPerformed
        guess = guessText.getText();
        letter = guess.charAt(0);
        guesses += letter;
        if (secret.indexOf(letter) < 0) // not there
        {
            --bodyparts;
            System.out.print("bad guess - ");
            img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/client/img/" + (6 - bodyparts + 1) + ".png")));
        } else // letter is in the secret
        {
            //	put it in dashes where it belongs
            matchLetter(secret, dashes, letter, words);
        }
        //System.out.println(bodyparts + " bodyparts are left");
        if (bodyparts == 0) {
            System.out.println("you lose");
            img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/client/img/8.png")));
            guessText.setEnabled(false);
        }
        if (secret.equals(dashes.toString())) {
            System.out.println("you win!");
            command.CommandList baru = new command.CommandList();
            baru.setCommand("FIN");
            ArrayList<String> detail = new ArrayList<>();
            detail.add(dashes.toString());
            detail.add(uname.getText());
            baru.setCommandDetails(detail);
            send(baru);
        }
        guessText.setText("");
    }//GEN-LAST:event_guessBtnActionPerformed

    private void unameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new client().setVisible(true);
            }
        });
    }
    
    public void disconFrom(){
        try{
            command.CommandList baru = new command.CommandList();
            baru.setCommand("END");
            send(baru);
            ois.close();
            oos.close();
            server.close();
            isConnected = false;
            setEnObject(false);
            connBtn.setText("Connect");
        }catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Server sedang offline");
        }
    }
    public void connTo(){
        try {
            server = new Socket(servname.getText(), 6060);
            bos = new BufferedOutputStream(server.getOutputStream());
            oos = new ObjectOutputStream(server.getOutputStream());
            ois = new ObjectInputStream(server.getInputStream());
            this.trdClient = new threadReadClient(this, server, ois, this.msgPool, this.room, this.scoring, this.waktu, this.listuser, this.top5);
            this.trdClient.start();
            
            
            command.CommandList baru = new command.CommandList();
            baru.setCommand("START");
            ArrayList<String> detail = new ArrayList<>();
            detail.add(uname.getText());
            baru.setCommandDetails(detail);
            send(baru);
            isConnected = true;
            setEnObject(true);
            connBtn.setText("Disconnect");
            uname.setEnabled(false);
            servname.setEnabled(false);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Server sedang offline");
        }
    }
    public void send(Object Obj){
        try {
            oos.writeObject(Obj);
            oos.flush();
            oos.reset();
        } catch (IOException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void setEnObject(boolean parameter){
        top5.setEnabled(parameter);
        waktu.setText("0");
        scoring.setText("0");
        room.setEnabled(parameter);
        msgPool.setEnabled(parameter);
        sendBtn.setEnabled(parameter);
        sendText.setEnabled(parameter);
        img.setEnabled(parameter);
        guessBtn.setEnabled(parameter);
        guessText.setEnabled(parameter);
        enterroom.setEnabled(parameter);
        listuser.setEnabled(parameter);
    }
    public String getCurrentWord() {
        return currentWord;
    }
    
// <editor-fold defaultstate="collapsed" desc="Fungsi Untuk Mencocokkan Huruf">

    public static void matchLetter(String secret, StringBuffer dashes, char letter, JLabel words) {
        for (int index = 0; index < secret.length(); index++) {
            if (secret.charAt(index) == letter) {
                dashes.setCharAt(index, letter);
            }
        }
        //System.out.print("good guess - ");
        words.setText(dashes.toString());
    }
// </editor-fold>

// <editor-fold defaultstate="collapsed" desc="Fungsi Untuk Membuat Titik Kosong dari Kata Terpilih">    
    public static StringBuffer makeDashes(String s) {
        StringBuffer dashes = new StringBuffer(s.length());
        for (int count = 0; count < s.length(); count++) {
            if ((s.charAt(count)) == ' ') 
                dashes.append(' ');
            else 
                dashes.append('-');
        }
        return dashes;
    }
// </editor-fold>

// <editor-fold defaultstate="collapsed" desc="Fungsi Untuk Memulai Game Baru"> 
    public void StartGame() {
        secret = getCurrentWord();
        guesses = "";
        done = false;
        bodyparts = MAXPARTS;
        System.out.println(secret);
        dashes = makeDashes(secret);
        words.setText(dashes.toString());
        guessText.setEnabled(true);
        
        img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/client/img/1.png")));
    }
// </editor-fold>
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connBtn;
    private javax.swing.JButton enterroom;
    private javax.swing.JButton guessBtn;
    private javax.swing.JTextField guessText;
    private javax.swing.JLabel img;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea listuser;
    private javax.swing.JTextArea msgPool;
    private javax.swing.JComboBox room;
    private javax.swing.JLabel scoring;
    private javax.swing.JButton sendBtn;
    private javax.swing.JTextField sendText;
    private javax.swing.JTextField servname;
    private javax.swing.JTextArea top5;
    private javax.swing.JTextField uname;
    private javax.swing.JLabel waktu;
    private javax.swing.JLabel words;
    // End of variables declaration//GEN-END:variables

    /**
     * @param currentWord the currentWord to set
     */
    public void setCurrentWord(String currentWord) {
        this.currentWord = currentWord;
    }

    /**
     * @return the count
     */
    public int getCount() {
        return count;
    }

    /**
     * @param count the count to set
     */
    public void setCount(int count) {
        this.count = count;
    }
}

class SayHello extends TimerTask {
    private client t;
    private JLabel j;
    
    SayHello(client t, JLabel j){
        this.t = t;
        this.j = j;
    }
    public void run() {
        if(t.getCount() == 0){
            t.setCount(30);
        }
        //System.out.println(t.getCount());
        if(t.flag)
            j.setText(Integer.toString(t.getCount()));
        t.setCount(t.getCount()-1);
        
    }
 }